unit xn.grid.sort.test;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit
  being tested.

}

interface

uses
  TestFramework, Generics.Collections, xn.grid.sort, xn.grid.link;

type
  TestTxnGridLinkSort = class(TTestCase)
  strict private
    fGridLinkSort: TxnGridLinkSort;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TestRowCount;
    procedure TestValue_0_0;
    procedure TestValue_3_15;

    procedure TestAsDebugNoFilterNoSort_Ok;
    procedure TestSortCol0Desc_Ok;
  end;

implementation

procedure TestTxnGridLinkSort.SetUp;
begin
  fGridLinkSort := TxnGridLinkSort.Create;
end;

procedure TestTxnGridLinkSort.TearDown;
begin
  fGridLinkSort.Free;
  fGridLinkSort := nil;
end;

procedure TestTxnGridLinkSort.TestAsDebugNoFilterNoSort_Ok;
begin
  CheckEquals('0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,', fGridLinkSort.AsDebug);
end;

procedure TestTxnGridLinkSort.TestRowCount;
begin
  CheckEquals(20, fGridLinkSort.RowCount);
end;

procedure TestTxnGridLinkSort.TestSortCol0Desc_Ok;
var
  si: TxnGridSortItems;
begin
  si := TxnGridSortItems.Create;
  try
    si.Add(TxnGridSortItem.Create(1, xstDesc));

    fGridLinkSort.Ordina(si);
    CheckEquals('0,1,10,11,12,13,14,15,16,17,18,19,2,3,4,5,6,7,8,9,', fGridLinkSort.AsDebug);
  finally
    si.Free;
  end;
end;

procedure TestTxnGridLinkSort.TestValue_0_0;
begin
  CheckEquals('0', fGridLinkSort.ValueString(0, 0));
end;

procedure TestTxnGridLinkSort.TestValue_3_15;
begin
  CheckEquals('3,76', fGridLinkSort.ValueString(3, 15));
end;

initialization

RegisterTest(TestTxnGridLinkSort.Suite);

end.
